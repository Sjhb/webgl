[{"/Volumes/project/wbgl-learn/src/App.js":"1","/Volumes/project/wbgl-learn/src/index.js":"2","/Volumes/project/wbgl-learn/src/reportWebVitals.js":"3","/Volumes/project/wbgl-learn/src/pages/index.js":"4","/Volumes/project/wbgl-learn/src/pages/circle.js":"5","/Volumes/project/wbgl-learn/src/router.js":"6","/Volumes/project/wbgl-learn/src/pages/ortProjection.js":"7","/Volumes/project/wbgl-learn/src/pages/perProjection.js":"8","/Volumes/project/wbgl-learn/src/pages/light.js":"9","/Volumes/project/wbgl-learn/src/pages/cube.js":"10","/Volumes/project/wbgl-learn/src/pages/pointLight.js":"11","/Volumes/project/wbgl-learn/src/pages/jointModel.js":"12","/Volumes/project/wbgl-learn/src/pages/mouseRotate.js":"13","/Volumes/project/wbgl-learn/src/pages/pickModel.js":"14","/Volumes/project/wbgl-learn/src/pages/fog.js":"15","/Volumes/project/wbgl-learn/src/pages/roundPoint.js":"16","/Volumes/project/wbgl-learn/src/pages/blened.js":"17","/Volumes/project/wbgl-learn/src/pages/multiProgram.js":"18"},{"size":1083,"mtime":1611936894000,"results":"19","hashOfConfig":"20"},{"size":500,"mtime":1609003358000,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1609003358000,"results":"22","hashOfConfig":"20"},{"size":4648,"mtime":1609956413000,"results":"23","hashOfConfig":"20"},{"size":2533,"mtime":1612114209000,"results":"24","hashOfConfig":"20"},{"size":1986,"mtime":1612457554000,"results":"25","hashOfConfig":"20"},{"size":3661,"mtime":1611686829000,"results":"26","hashOfConfig":"20"},{"size":3512,"mtime":1611602111000,"results":"27","hashOfConfig":"20"},{"size":6402,"mtime":1612020580000,"results":"28","hashOfConfig":"20"},{"size":4287,"mtime":1611855348000,"results":"29","hashOfConfig":"20"},{"size":6899,"mtime":1611936485000,"results":"30","hashOfConfig":"20"},{"size":9102,"mtime":1612037290000,"results":"31","hashOfConfig":"20"},{"size":8096,"mtime":1612085438000,"results":"32","hashOfConfig":"20"},{"size":11267,"mtime":1612291872000,"results":"33","hashOfConfig":"20"},{"size":6936,"mtime":1612114034000,"results":"34","hashOfConfig":"20"},{"size":2520,"mtime":1612375713000,"results":"35","hashOfConfig":"20"},{"size":3643,"mtime":1612453104000,"results":"36","hashOfConfig":"20"},{"size":8713,"mtime":1612469761000,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"166f7zj",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/project/wbgl-learn/src/App.js",[],"/Volumes/project/wbgl-learn/src/index.js",[],["78","79"],"/Volumes/project/wbgl-learn/src/reportWebVitals.js",[],"/Volumes/project/wbgl-learn/src/pages/index.js",[],["80","81"],"/Volumes/project/wbgl-learn/src/pages/circle.js",[],"/Volumes/project/wbgl-learn/src/router.js",["82"],"/Volumes/project/wbgl-learn/src/pages/ortProjection.js",["83","84"],"/Volumes/project/wbgl-learn/src/pages/perProjection.js",[],"/Volumes/project/wbgl-learn/src/pages/light.js",[],"/Volumes/project/wbgl-learn/src/pages/cube.js",[],"/Volumes/project/wbgl-learn/src/pages/pointLight.js",[],"/Volumes/project/wbgl-learn/src/pages/jointModel.js",["85","86"],"/Volumes/project/wbgl-learn/src/pages/mouseRotate.js",["87","88"],"/Volumes/project/wbgl-learn/src/pages/pickModel.js",["89","90"],"import React, { createRef, useEffect, useState } from 'react';\nimport Matrix4 from 'Matrix4';\n\nlet catchMouve = false;\nlet startX = 0;\nlet startY = 0;\nlet lastMouseDown = 0;\n// 选择模型\nexport default function MouseRotate () {\n  const [xRotate, setXRotate] = useState(20);\n  const [yRotate, setYRotate] = useState(-54);\n  const [rect, setReact] = useState(null);\n  const domRef = createRef();\n  const F = {};\n  useEffect(() => {\n    if (domRef.current) {\n      const dom = domRef.current;\n      if (!rect) {\n        setReact(dom.getBoundingClientRect());\n      }\n      F.gl = dom.getContext('webgl');\n      const VSHADER_SOURCE = `\n        attribute vec4 a_Position;\n        attribute vec4 a_Color;\n        attribute vec4 a_Normal;\n        attribute float a_faceNum;\n        uniform mat4 a_mvpMatrix;\n        uniform mat4 a_normalMatrix;\n        uniform mat4 a_modelMatrix;\n        varying vec4 u_Color;\n        varying vec4 u_Position;\n        varying vec4 u_Normal;\n        varying float u_FaceNum;\n        void main () {\n          gl_Position = a_mvpMatrix * a_Position;\n          u_Position = a_modelMatrix * a_Position;\n          u_Normal = a_normalMatrix * a_Normal;\n          u_Color = a_Color;\n          u_FaceNum = a_faceNum;\n        }\n        `;\n        const FSHADER_SOURCE = `\n        precision mediump float;\n        uniform vec3 a_lightPosition;\n        uniform vec3 a_ambientlightColor;\n        uniform vec3 a_lightColor;\n        uniform bool u_RightChecked;\n        uniform bool u_LeftChecked;\n        uniform int a_checkedFaceNum;\n        varying vec4 u_Color;\n        varying vec4 u_Position;\n        varying vec4 u_Normal;\n        varying float u_FaceNum;\n        void main () {\n          if (u_LeftChecked) {\n            gl_FragColor = vec4(1.0,0.0,0.0,1.0);\n          } else if (u_RightChecked) {\n            gl_FragColor = vec4(u_FaceNum / 10.0, 0.0, 0.0, 1.0);\n          } else {\n            vec4 color = (a_checkedFaceNum == int(u_FaceNum)) ? vec4(1.0,1.0,1.0, 1.0) : u_Color;\n            vec3 lightDirection = a_lightPosition - vec3(u_Position);\n            vec3 normal = normalize(vec3(u_Normal));\n            float nor = max(dot(normal, normalize(lightDirection)), 0.0);\n            gl_FragColor = vec4(a_ambientlightColor * color.rgb + color.rgb * a_lightColor * nor, color.a);\n          }\n        }\n      `;\n      const vshader = F.gl.createShader(F.gl.VERTEX_SHADER);\n      const fshader = F.gl.createShader(F.gl.FRAGMENT_SHADER);\n      F.gl.shaderSource(vshader, VSHADER_SOURCE);\n      F.gl.shaderSource(fshader, FSHADER_SOURCE);\n      F.gl.compileShader(vshader);\n      F.gl.compileShader(fshader);\n      if (!F.gl.getShaderParameter(vshader, F.gl.COMPILE_STATUS)) {\n        throw new Error('顶点着色器初始化失败')\n      }\n      if (!F.gl.getShaderParameter(fshader, F.gl.COMPILE_STATUS)) {\n        throw new Error('片元着色器初始化失败')\n      }\n\n      const program = F.gl.createProgram();\n      F.gl.attachShader(program, vshader);\n      F.gl.attachShader(program, fshader);\n      F.gl.linkProgram(program);\n      F.gl.useProgram(program);\n\n      F.aPosition = F.gl.getAttribLocation(program, 'a_Position');\n      F.aColor = F.gl.getAttribLocation(program, 'a_Color');\n      F.aMvpMatrix = F.gl.getUniformLocation(program, 'a_mvpMatrix');\n      F.aModelMatrix = F.gl.getUniformLocation(program, 'a_modelMatrix');\n      F.aNormal = F.gl.getAttribLocation(program, 'a_Normal');\n      F.aLightPosition = F.gl.getUniformLocation(program, 'a_lightPosition');\n      F.aLightColor = F.gl.getUniformLocation(program, 'a_lightColor');\n      F.aAmbientlightColor = F.gl.getUniformLocation(program, 'a_ambientlightColor');\n      F.aNormalMatrix = F.gl.getUniformLocation(program, 'a_normalMatrix');\n      F.uLeftChecked = F.gl.getUniformLocation(program, 'u_LeftChecked');\n      F.uRightChecked = F.gl.getUniformLocation(program, 'u_RightChecked');\n      F.aFaceNum = F.gl.getAttribLocation(program, 'a_faceNum');\n      F.aCheckedFaceNum = F.gl.getUniformLocation(program, 'a_checkedFaceNum');\n\n      const sp = [\n        [], [-1.0, 1.0, 1.0], [-1.0, -1.0, 1.0], [1.0, 1.0, 1.0], [1.0, -1.0, 1.0],\n        [-1.0, 1.0, -1.0], [-1.0, -1.0, -1.0], [1.0, 1.0, -1.0], [1.0, -1.0, -1.0],\n      ];\n      const sc = [\n        [], [1.0, 0.3, 0.3], [0.3, 0.3, 1.0], [1.0, 1.0, 0.4], [0.4, 1.0, 0.4], [0.4, 1.0,1.0], [1.0,0.4 ,1.0]\n      ];\n\n      const nm = [\n        [], [0,1,0], [0,-1,0],\n        [0, 0, 1.0], [0, 0, -1.0],\n        [1.0, 0.0, 0.0], [-1.0, 0.0, 0.0],\n      ];\n      const points = new Float32Array([\n        ...sp[1],...sp[2], ...sp[3],  ...sp[4], // 前\n        ...sp[5], ...sp[6], ...sp[7],  ...sp[8], // 后\n        ...sp[5],...sp[1], ...sp[2], ...sp[6], // 左\n        ...sp[7],...sp[3], ...sp[8], ...sp[4], // 右\n        ...sp[5],...sp[1], ...sp[7], ...sp[3], // 上\n        ...sp[6],...sp[2], ...sp[8], ...sp[4], // 下\n      ]);\n\n      const colors = new Float32Array([\n        ...sc[1],...sc[1], ...sc[1], ...sc[1], // 前\n        ...sc[2],...sc[2], ...sc[2], ...sc[2], // 后\n        ...sc[3],...sc[3], ...sc[3], ...sc[3], // 左\n        ...sc[4],...sc[4], ...sc[4], ...sc[4], // 右\n        ...sc[5],...sc[5], ...sc[5], ...sc[5], // 上\n        ...sc[6],...sc[6], ...sc[6], ...sc[6], // 下\n      ])\n\n      const normals =  new Float32Array([\n        ...nm[3], ...nm[3],...nm[3],...nm[3], // 前\n        ...nm[4], ...nm[4],...nm[4],...nm[4], // 后\n        ...nm[6], ...nm[6],...nm[6],...nm[6],// 左\n        ...nm[5],...nm[5],...nm[5],...nm[5], // 右\n        ...nm[1],...nm[1],...nm[1],...nm[1],// 上\n        ...nm[2],...nm[2],...nm[2],...nm[2], // 下\n      ]);\n\n      const faces = new Float32Array([\n        1.0, 1.0, 1.0, 1.0,\n        2.0, 2.0,2.0,2.0,\n        3.0, 3.0,3.0,3.0,\n        4.0, 4.0,4.0,4.0,\n        5.0, 5.0,5.0,5.0,\n        6.0, 6.0,6.0,6.0,\n      ]);\n\n      const pointBuf = F.gl.createBuffer();\n      F.gl.bindBuffer(F.gl.ARRAY_BUFFER, pointBuf);\n      F.gl.bufferData(F.gl.ARRAY_BUFFER, points, F.gl.STATIC_DRAW);\n      F.gl.vertexAttribPointer(F.aPosition, 3, F.gl.FLOAT, false, 0, 0);\n      F.gl.enableVertexAttribArray(F.aPosition);\n      \n      const colorBuf = F.gl.createBuffer();\n      F.gl.bindBuffer(F.gl.ARRAY_BUFFER, colorBuf);\n      F.gl.bufferData(F.gl.ARRAY_BUFFER, colors, F.gl.STATIC_DRAW);\n      F.gl.vertexAttribPointer(F.aColor, 3, F.gl.FLOAT, false, 0, 0);\n      F.gl.enableVertexAttribArray(F.aColor);\n\n      const normalBuf = F.gl.createBuffer();\n      F.gl.bindBuffer(F.gl.ARRAY_BUFFER, normalBuf);\n      F.gl.bufferData(F.gl.ARRAY_BUFFER, normals, F.gl.STATIC_DRAW);\n      F.gl.vertexAttribPointer(F.aNormal, 3, F.gl.FLOAT, false, 0, 0);\n      F.gl.enableVertexAttribArray(F.aNormal);\n\n      const faceBuf = F.gl.createBuffer();\n      F.gl.bindBuffer(F.gl.ARRAY_BUFFER, faceBuf);\n      F.gl.bufferData(F.gl.ARRAY_BUFFER, faces, F.gl.STATIC_DRAW);\n      F.gl.vertexAttribPointer(F.aFaceNum, 1, F.gl.FLOAT, false, 0, 0);\n      F.gl.enableVertexAttribArray(F.aFaceNum);\n\n      F.gl.uniform3fv(F.aLightColor, [1.0 , 1.0, 1.0]);\n      F.gl.uniform3fv(F.aAmbientlightColor, [0.2, 0.2, 0.2]);\n      F.gl.uniform3fv(F.aLightPosition, [-1.0, 1.3, 1.6]);\n\n      const indicas = new Uint8Array([\n        0, 1, 2, 1, 2,3,\n        4,5,6,5,6,7,\n        8,9,10,8,10,11,\n        12,13,14, 13,14, 15,\n        16,17,18, 17,18,19,\n        20,21,22, 21,22,23\n      ]);\n\n      const indexBuffer = F.gl.createBuffer();\n      F.gl.bindBuffer(F.gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n      F.gl.bufferData(F.gl.ELEMENT_ARRAY_BUFFER, indicas, F.gl.STATIC_DRAW);\n\n    }\n  }, [domRef]);\n  \n  useEffect(() => {\n    drawBox(xRotate, yRotate);\n    document.getElementById('tip1').innerHTML = '双击选中模型'\n  }, [xRotate, yRotate]);\n\n  const drawBox = (rx, ry) => {\n    const viewMatrix = new Matrix4();\n    const perMatrix = new Matrix4();\n    const modelMatrix = new Matrix4();\n    const mvpMatrix = new Matrix4();\n    const normalMatrix = new Matrix4();\n    viewMatrix.setLookAt(0,0,10, 0.0,0.0,-100, 0.0,1.0,0.0);\n    modelMatrix.rotate(rx, 1, 0, 0).rotate(ry, 0, 1, 0);\n    normalMatrix.setInverseOf(modelMatrix);\n    normalMatrix.transpose();\n    perMatrix.setPerspective(30,domRef.current.width/domRef.current.height, 1,100);\n    mvpMatrix.set(perMatrix).multiply(viewMatrix).multiply(modelMatrix);\n    F.gl.uniformMatrix4fv(F.aMvpMatrix, false, mvpMatrix.elements);\n    F.gl.uniformMatrix4fv(F.aNormalMatrix, false, normalMatrix.elements);\n    F.gl.uniformMatrix4fv(F.aModelMatrix, false, modelMatrix.elements);\n    \n    F.gl.clearColor(0.0,0.0,0.0,1.0);\n    F.gl.enable(F.gl.DEPTH_TEST);\n    F.gl.clear(F.gl.COLOR_BUFFER_BIT| F.gl.DEPTH_BUFFER_BIT);\n    F.gl.clear(F.gl.COLOR_BUFFER_BIT);\n    F.gl.drawElements(F.gl.TRIANGLES, 36, F.gl.UNSIGNED_BYTE, 0);\n  }\n\n  const mouseMoveHandle = (e) => {\n    if (catchMouve) {\n      setYRotate(((e.clientX - startX) / rect.width) * 180 + yRotate);\n      setXRotate(((e.clientY - startY) / rect.height) * 180 + xRotate);\n      startX = e.clientX;\n      startY = e.clientY;\n    }\n  }\n  const mouseDownHandle = (e) => {\n    const now = new Date();\n    catchMouve = true;\n    startX = e.clientX;\n    startY = e.clientY;\n    // 鼠标右键\n    if (e.button === 2) {\n      if (now - lastMouseDown <= 700 && e.clientX >= rect.left && e.clientX <= rect.right && e.clientY >= rect.top && e.clientY<= rect.bottom) {\n        rightClickHandle(e.clientX - rect.left, rect.bottom - e.clientY);\n      }\n    } else if (now - lastMouseDown <= 700 && e.clientX >= rect.left && e.clientX <= rect.right && e.clientY >= rect.top && e.clientY<= rect.bottom) {\n      doubleClickHandle(e.clientX - rect.left, rect.bottom - e.clientY);\n    }\n    lastMouseDown = new Date();\n  }\n  const mouseUpHandle = (e) => { catchMouve = false }\n  const mouseLeaveHande = (e) => {catchMouve = false}\n\n  // 双击\n  const doubleClickHandle = (x, y) => {\n    F.gl.uniform1i(F.uLeftChecked, 1);\n    drawBox(xRotate, yRotate);\n    const pixels = new Uint8Array(4);\n    F.gl.readPixels(x, y, 1, 1, F.gl.RGBA, F.gl.UNSIGNED_BYTE, pixels);\n    F.gl.uniform1i(F.uLeftChecked, 0);\n    drawBox(xRotate, yRotate);\n    if (pixels[0] === 255) {\n      document.getElementById('tip1').innerHTML = '双击选中模型： 已选中'\n    } else {\n      document.getElementById('tip1').innerHTML = '双击选中模型'\n    }\n  }\n\n  const rightClickHandle = (x, y) => {\n    F.gl.uniform1i(F.uRightChecked, 1);\n    drawBox(xRotate, yRotate);\n    const pixels = new Uint8Array(4);\n    F.gl.readPixels(x, y, 1, 1, F.gl.RGBA, F.gl.UNSIGNED_BYTE, pixels);\n    if (pixels[0] <= 153 && pixels[0] >= 25) {\n      F.gl.uniform1i(F.aCheckedFaceNum, Math.round(pixels[0] / 255 * 10));\n    }\n    F.gl.uniform1i(F.uRightChecked, 0);\n    drawBox(xRotate, yRotate);\n\n    document.getElementById('tip1').innerHTML = '双击选中模型'\n  }\n\n  return <div style={{userSelect: 'none'}}>\n    <canvas\n      ref={domRef}\n      width=\"500\"\n      height=\"500\"\n      onMouseMove={mouseMoveHandle}\n      onMouseDown={mouseDownHandle}\n      onMouseUp={mouseUpHandle}\n      onMouseLeave={mouseLeaveHande}\n    />\n    <div>\n      <h3 id=\"tip1\">双击选中模型</h3>\n      <h3>右键选中模型面</h3>\n      <div>绕Y轴旋转：{yRotate}</div>\n      <div>绕X轴旋转：{xRotate}</div>\n    </div>\n  </div>;\n}","/Volumes/project/wbgl-learn/src/pages/fog.js",["91","92","93"],"/Volumes/project/wbgl-learn/src/pages/roundPoint.js",["94"],"import React, { createRef, useEffect } from 'react';\nimport getWebGLContext from 'getWebGLContext';\n\nexport default function RoundPoint() {\n  const dom = createRef();\n  let F = {}\n  useEffect(() => {\n    if (dom.current) {\n      const VERTEX_SHADER_SOURCE = `\n        attribute vec4 a_Position;\n        void main () {\n          gl_Position = a_Position;\n          gl_PointSize = 10.0;\n        }\n      `;\n      const FRAGMENT_SHADER_SOURCE = `\n        precision mediump float;\n        uniform float u_Width;\n        void main () {\n          float dist = distance(gl_PointCoord, vec2(0.5,0.5));\n          if (dist > 0.5) {\n            discard;\n          } else {\n            gl_FragColor = vec4(0.5,1.0,0.0,1.0);\n          }\n        }\n      `;\n      F.gl = getWebGLContext(dom.current, true);\n      const vertexShader = F.gl.createShader(F.gl.VERTEX_SHADER);\n      const fragmentShader = F.gl.createShader(F.gl.FRAGMENT_SHADER);\n      F.gl.shaderSource(vertexShader, VERTEX_SHADER_SOURCE);\n      F.gl.shaderSource(fragmentShader, FRAGMENT_SHADER_SOURCE);\n      F.gl.compileShader(vertexShader);\n      F.gl.compileShader(fragmentShader);\n\n      if (!F.gl.getShaderParameter(vertexShader, F.gl.COMPILE_STATUS)) {\n        throw new Error('顶点着色器初始化失败')\n      }\n      if (!F.gl.getShaderParameter(fragmentShader, F.gl.COMPILE_STATUS)) {\n        throw new Error('片元着色器初始化失败')\n      }\n\n      const program = F.gl.createProgram();\n      F.gl.attachShader(program, vertexShader);\n      F.gl.attachShader(program, fragmentShader);\n      F.gl.linkProgram(program)\n      F.gl.useProgram(program);\n      F.gl.clearColor(0,0,0,1.0);\n\n      const a_Position = F.gl.getAttribLocation(program, 'a_Position');\n      const u_Width = F.gl.getUniformLocation(program, 'u_Width');\n      const glWidth = F.gl.drawingBufferWidth;\n      console.log(glWidth)\n      F.gl.uniform1f(u_Width, glWidth);\n\n      let points = new Float32Array([\n        0.0, 0.0, 0.0,\n        0.0, 0.5, 0.0,\n        0.5, 0.5, 0.0,\n        0.5, 0.0, 0.0,\n      ]);\n      const buf = F.gl.createBuffer();\n      F.gl.bindBuffer(F.gl.ARRAY_BUFFER, buf);\n      F.gl.bufferData(F.gl.ARRAY_BUFFER, points, F.gl.STATIC_DRAW);\n      F.gl.vertexAttribPointer(a_Position, 3, F.gl.FLOAT, false, 0,0);\n      F.gl.enableVertexAttribArray(a_Position);\n\n      F.gl.clear(F.gl.COLOR_BUFFER_BIT);\n      F.gl.drawArrays(F.gl.POINTS, 0, 4);\n    }\n  }, [dom]);\n\n  return <div className=\"App\">\n    <canvas ref={dom} width=\"500\" height=\"500\"/>\n  </div>\n}\n","/Volumes/project/wbgl-learn/src/pages/blened.js",[],"/Volumes/project/wbgl-learn/src/pages/multiProgram.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"95","replacedBy":"99"},{"ruleId":"97","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":16,"column":1,"nodeType":"103","endLine":100,"endColumn":2},{"ruleId":"104","severity":1,"message":"105","line":76,"column":9,"nodeType":"106","messageId":"107","endLine":82,"endColumn":10},{"ruleId":"108","severity":1,"message":"109","line":99,"column":6,"nodeType":"110","endLine":99,"endColumn":14,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":139,"column":6,"nodeType":"110","endLine":139,"endColumn":17,"suggestions":"113"},{"ruleId":"108","severity":1,"message":"114","line":181,"column":19,"nodeType":"115","endLine":181,"endColumn":30},{"ruleId":"108","severity":1,"message":"116","line":158,"column":6,"nodeType":"110","endLine":158,"endColumn":14,"suggestions":"117"},{"ruleId":"108","severity":1,"message":"118","line":181,"column":6,"nodeType":"110","endLine":181,"endColumn":24,"suggestions":"119"},{"ruleId":"108","severity":1,"message":"116","line":192,"column":6,"nodeType":"110","endLine":192,"endColumn":14,"suggestions":"120"},{"ruleId":"108","severity":1,"message":"121","line":197,"column":6,"nodeType":"110","endLine":197,"endColumn":24,"suggestions":"122"},{"ruleId":"108","severity":1,"message":"123","line":129,"column":6,"nodeType":"110","endLine":129,"endColumn":23,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":133,"column":20,"nodeType":"127","messageId":"128","endLine":133,"endColumn":22},{"ruleId":"108","severity":1,"message":"129","line":157,"column":6,"nodeType":"110","endLine":157,"endColumn":17,"suggestions":"130"},{"ruleId":"108","severity":1,"message":"131","line":71,"column":6,"nodeType":"110","endLine":71,"endColumn":11,"suggestions":"132"},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],["133"],["134"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pRef'. Either include it or remove the dependency array.","ArrayExpression",["135"],"React Hook useEffect has missing dependencies: 'F' and 'vpMatrix'. Either include them or remove the dependency array.",["136"],"Assignments to the 'modelMatrix' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has missing dependencies: 'F' and 'rect'. Either include them or remove the dependency array.",["137"],"React Hook useEffect has missing dependencies: 'F.aModelMatrix', 'F.aMvpMatrix', 'F.aNormalMatrix', 'F.gl', and 'domRef'. Either include them or remove the dependency array.",["138"],["139"],"React Hook useEffect has a missing dependency: 'drawBox'. Either include it or remove the dependency array.",["140"],"React Hook useEffect has missing dependencies: 'F' and 'M'. Either include them or remove the dependency array.",["141"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'F', 'M', and 'domRef'. Either include them or remove the dependency array.",["142"],"React Hook useEffect has a missing dependency: 'F'. Either include it or remove the dependency array.",["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"148","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [domRef, pRef]",{"range":"161","text":"162"},"Update the dependencies array to be: [F, canvasRef, vpMatrix]",{"range":"163","text":"164"},"Update the dependencies array to be: [F, domRef, rect]",{"range":"165","text":"166"},"Update the dependencies array to be: [F.aModelMatrix, F.aMvpMatrix, F.aNormalMatrix, F.gl, domRef, xRotate, yRotate]",{"range":"167","text":"168"},{"range":"169","text":"166"},"Update the dependencies array to be: [drawBox, xRotate, yRotate]",{"range":"170","text":"171"},"Update the dependencies array to be: [domRef, dom1Ref, F, M]",{"range":"172","text":"173"},"Update the dependencies array to be: [near, far, F, M, domRef]",{"range":"174","text":"175"},"Update the dependencies array to be: [F, dom]",{"range":"176","text":"177"},[3527,3535],"[domRef, pRef]",[5810,5821],"[F, canvasRef, vpMatrix]",[6110,6118],"[F, domRef, rect]",[7157,7175],"[F.aModelMatrix, F.aMvpMatrix, F.aNormalMatrix, F.gl, domRef, xRotate, yRotate]",[7481,7489],[7608,7626],"[drawBox, xRotate, yRotate]",[5107,5124],"[domRef, dom1Ref, F, M]",[6326,6337],"[near, far, F, M, domRef]",[2380,2385],"[F, dom]"]